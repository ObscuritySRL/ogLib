{$DEFINE SMART}
{$loadlib libsmartremote}

type tSmart=record
  graphics:tGraphics;
  pid:int32;
  target:int32;
end;

var
  smart:tSmart;
  smartPointers:array of pointer;


procedure tSmart.create();
begin self.create(800,600);end;


procedure tSmart.create(funcWidth,funcHeight:int32);overload;
var
  funcParams:tStringArray;
begin
  if not self.setPair() then
  begin
    if length(funcParams:=self.getParams())<2 then
    begin
      ogl.debug('tSmart.getParameters() failed');
      terminateScript();
    end;
    writeLN(funcParams);
    self.target:=smartSpawnClient(self.getJavaPath().debug() {'C:\Program Files (x86)\Java\jre7\bin\java.exe'},replace(pluginPath,'\','/',[0]),funcParams[0],','+funcParams[1],funcWidth,funcHeight,'','abc' {Useragent},'-XX:MinHeapFreeRatio=20 -XX:MaxHeapFreeRatio=30','OpenGL32.dll');
    if self.target then
    begin
      try
        self.pid:=smartGetClientPID(self.target);
        setEIOSTarget('libsmartremote',toStr(self.pid));
        self.graphics.create(funcWidth,funcHeight,smartDebugArray(self.target));
        insert(@self,smartPointers);
      except
        ogl.debug('tSmart.create() failed 1');
        smartFreeClient(self.target);
        terminateScript();
      end;
    end else
    begin
      ogl.debug('tSmart.create() failed 2');
      smartFreeClient(self.target);
      terminateScript();
    end;
  end;
  addOnTerminate('tSmartSetFree');
end;

procedure tSmart.destroy();
begin
  smartFreeClient(self.target);
  smartKillClient(self.pid);
  self.graphics.free();
  self.pid:=0;
  self.target:=0;
  delete(pointer(@self),smartPointers);
end;

function tSmart.getDriveLetter():string;
begin exit(replaceRegExpr('^(\w):\\.*',pluginPath,'$1',true));end;

function tSmart.getJavaPath():ansiString;
var
  funcJRE,
    funcProgramFiles:tStringArray;
  funcJREIndex,
    funcProgramFilesIndex:int32;
begin
  for funcProgramFilesIndex to high(funcProgramFiles:=getDirectories(self.getDriveLetter()+':\Program Files')) do
    for funcJREIndex:=high(funcJRE:=getDirectories(self.getDriveLetter()+':\'+funcProgramFiles[funcProgramFilesIndex]+'\Java\jre')) downTo 0 do
      if fileExists(self.getDriveLetter()+':\'+funcProgramFiles[funcProgramFilesIndex]+'\Java\'+funcJRE[funcJREIndex]+'\bin\java.exe') then
      begin
        result:=self.getDriveLetter()+':\'+funcProgramFiles[funcProgramFilesIndex]+'\Java\'+funcJRE[funcJREIndex]+'\bin\java.exe';
        break;
      end;
  exit(result);
end;

function tSmart.getAvailablePID():int32;
var
  funcLength,
    funcIndex:int32;
begin
  if smartGetClients(true) then
    result:=smartGetAvailablePID(0);
  exit(result);
end;

function tSmart.getHeight():int32;
begin
  if (result:=oglClientHeight)=0 then
  begin
    getClientPosition(oglClientWidth,oglClientHeight);
    result:=oglClientHeight;
  end;
  exit(result);
end;

function tSmart.getParams():tStringArray;
var
  funcPage:string;
  funcPageIndex:int32=200;
  funcPageExplode:tStringArray;
  funcParams:tStringArray;
  funcParamsIndex:int32;
  funcResultIndex:int32;
begin
  {$IFDEF DARKSCAPE}
  for funcPageIndex to 207 do
  begin
    funcPage:=getPage('http://world'+toStr(funcPageIndex)+'.runescape.com/jav_config_beta.ws');
    if funcPage<>'' then
    begin
      setLength(result,length(funcPageExplode:=explode(#10,funcPage)));
      for funcParamsIndex to high(funcPageExplode) do
        if execRegExpr('^(codebase|param)=(.+)',funcPageExplode[funcParamsIndex]) then
        begin
          result[funcResultIndex]:=replaceRegExpr('^(codebase|param)=(.+)',funcPageExplode[funcParamsIndex],'$2',true);
          funcResultIndex+=1;
        end;
      break;
    end;
  end;
  setLength(result,funcResultIndex);
  {$ELSE}
  funcPage:=getPage('http://www.runescape.com/game.ws?j=1');
  result:=explode(',',between('worldLink=''','''',funcPage));
  {$ENDIF}
  exit(result);
end;

function tSmart.getWidth():int32;
begin
  if (result:=oglClientWidth)=0 then
  begin
    getClientPosition(oglClientWidth,oglClientHeight);
    result:=oglClientWidth;
  end;
  exit(result);
end;

function tSmart.setPair():boolean;
begin
  if (self.pid:=self.getAvailablePID()) then
    if (self.target:=smartPairClient(self.pid)) then
    begin
      setEIOSTarget('libsmartremote',toStr(self.pid));
      self.graphics.create(self.getWidth(),self.getHeight(),smartDebugArray(self.target));
      insert(@self,smartPointers);
      result:=true;
    end;
  if result then
    ogl.debug('tSmart.setPair() successful');
  exit(result);
end;

procedure tSmart.setFree();overload;
begin
  smartFreeClient(self.target);
  self.graphics.free();
  self.pid:=0;
  self.target:=0;
  delete(pointer(@self),smartPointers);
end;

procedure tSmartSetFree;
var
  funcIndex:int32;
begin
  for funcIndex to high(smartPointers) do
    tSmart(smartPointers[funcIndex]^).setFree();
end;
