{$f-}
{
  ========================================
  EXAMPLES:
  ----------------------------------------
  minimap.clickDegrees(180);
  ========================================
}

function tMinimap.clickDegrees(funcDegrees:int32):boolean;
  begin exit(result:=minimap.clickRadians(funcDegrees*0.01745329251994329576923690768489));end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  minimap.clickDirection('north-west');
  ========================================
}

function tMinimap.clickDirection(funcDirection:ansiString):boolean;
  var
    funcAngle:double;
  begin
    case (funcDirection:=replaceRegExpr('(\W|_)*',lowercase(funcDirection),'',false)) of
      'north':funcAngle:=0;
      'northwest':funcAngle:=0.78539816339744830961566084581988;
      'west':funcAngle:=1.5707963267948966192313216916401;
      'southwest':funcAngle:=2.3561944901923449288469825374602;
      'south':funcAngle:=3.1415926535897932384626433832795;
      'southeast':funcAngle:=3.9269908169872415480783042291003;
      'east':funcAngle:=4.7123889803846898576939650749203;
      'northeast':funcAngle:=5.4977871437821381673096259207404;
    end;
    exit(result:=minimap.clickRadians(funcAngle));
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  minimap.clickHomeTeleport();
  ========================================
}

function tMinimap.clickHomeTeleport():boolean;
  var
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
    funcX,
      funcY:int32;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=87984 then
              begin
                clickMouse(random((funcX:=(funcPointer+12)^)-15,funcX+15),random((funcY:=(funcPointer+16)^)-15,funcY+15),1);
                result:=true;
                break;
              end;
            funcPointer:=funcPointer+36;
          end;
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  minimap.clickRadians(3.1415926535897932384626433832795);
  ========================================
}

function tMinimap.clickRadians(funcRadians:double;funcRelative:boolean=true):boolean;
  var
    funcScale:double;
    funcMapX,
      funcMapY:array[0..3] of single;
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
    funcRadius,
      funcX1,
      funcX2,
      funcY1,
      funcY2:int32;
  begin
    if funcRelative then
      begin
        glMapCoords(funcMapX,funcMapY);
        funcRadians:=-funcRadians+arcTan2(funcMapY[3]-funcMapY[0],funcMapX[3]-funcMapX[0])-1.5707963267948966192313216916398;
      end
    else
      funcRadians:=-funcRadians-1.5707963267948966192313216916398;
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=237147 then
              begin
                funcRadius:=min(round(((funcY2:=(funcPointer+140)^)-(funcY1:=(funcPointer+24)^))/2)-25,round(((funcX2:=(funcPointer+136)^)-(funcX1:=(funcPointer+20)^))/2)-25);
                clickMouse(round(funcX1+(funcX2-funcX1)/2+funcRadius*cos(funcRadians)*(funcScale:=random())),round(funcY1+(funcY2-funcY1)/2+funcRadius*sin(funcRadians)*funcScale),1);
                result:=true;
                break;
              end;
            funcPointer:=funcPointer+36;
          end;
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __degrees:=minimap.getDegrees();
  if shortestDegrees(__degrees,0).abs()>10 then
    minimap.clickResetCamera();
  ========================================
}

function tMinimap.clickResetCamera():boolean;
  var
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
    funcX,
      funcY:int32;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=147885 then
              begin
                clickMouse(random((funcX:=(funcPointer+12)^)-16,funcX+16),random((funcY:=(funcPointer+16)^)-16,funcY+16),1);
                result:=true;
                break;
              end;
            funcPointer:=funcPointer+36;
          end;
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __degrees:=minimap.getDegrees();
  if shortestDegrees(__degrees,45).abs()>10 then
    minimap.setDegrees(45);
  ========================================
}

function tMinimap.getDegrees():int32;
  var
    funcAngle:double;
    funcMapX,
      funcMapY:array[0..3] of single;
  begin
    glMapCoords(funcMapX,funcMapY);
    funcAngle:=arcTan2(funcMapY[3]-funcMapY[0],funcMapX[3]-funcMapX[0]);
    if funcAngle>0 then
      result:=round(funcAngle*360/(2*3.1415926535897932384626433832795))
    else
      result:=round((2*3.1415926535897932384626433832795+funcAngle)*360/(2*3.1415926535897932384626433832795));
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  if minimap.getLocalPosition().y>70 then
    minimap.clickDirection('south');
  ========================================
}

function tMinimap.getLocalPosition():tPoint;
  var
    funcMap:array[0..1] of array[0..3] of single;
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
    funcPlayer,
      funcPosition:array[0..1] of double;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=237147 then
              begin
                funcPlayer:=[0+(funcPointer+20)^+(0+(funcPointer+136)^-(funcPointer+20)^)/2,0+(funcPointer+24)^+(0+(funcPointer+140)^-(funcPointer+24)^)/2];
                break;
              end;
            funcPointer:=funcPointer+36;
          end;
        if glMapCoords(funcMap[0],funcMap[1]) and (@funcMap[0][0]<>nil) and (@funcPlayer[0]<>nil) then
          begin
            funcPosition[0]:=((funcPlayer[0]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcPlayer[1]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
            funcPosition[1]:=((funcPlayer[1]-funcMap[1][0])*(funcMap[0][3]-funcMap[0][0])-(funcPlayer[0]-funcMap[0][0])*(funcMap[1][3]-funcMap[1][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
            result:=[round(funcPosition[0]+0.1) , round(funcPosition[1]+0.1)];
          end;
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  if minimap.getLocalPosition(minimap.getPlayer()).y>70 then
    minimap.clickDirection('south');
  ========================================
}

function tMinimap.getLocalPosition(funcPoint:tPoint):tPoint;overload;
  var
    funcMap:array[0..1] of array[0..3] of single;
    funcPosition:array[0..1] of double;
  begin
    if glMapCoords(funcMap[0],funcMap[1]) then
      begin
        funcPosition[0]:=((funcPoint.x-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcPoint.y-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
        funcPosition[1]:=((funcPoint.y-funcMap[1][0])*(funcMap[0][3]-funcMap[0][0])-(funcPoint.x-funcMap[0][0])*(funcMap[1][3]-funcMap[1][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
        writeLN(funcPosition);
        result:=[round(funcPosition[0]) , round(funcPosition[1])];
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  (*
    DESCRIPTION: The ID 3570 belongs to
    player dots.
  *)
  if minimap.getLocalPosition().y>minimap.getLocalPosition(ogl.getTextures(3570)) then
    minimap.clickDirection('north');
  ========================================
}

function tMinimap.getLocalPosition(funcTexture:glTexture):tPoint;overload;
  var
    funcMap:array[0..1] of array[0..3] of single;
    funcPlayer,
      funcPosition:array[0..1] of double;
  begin
    if glMapCoords(funcMap[0],funcMap[1]) then
      begin
        funcPosition[0]:=((funcTexture.x-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcTexture.y-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
        funcPosition[1]:=((funcTexture.y-funcMap[1][0])*(funcMap[0][3]-funcMap[0][0])-(funcTexture.x-funcMap[0][0])*(funcMap[1][3]-funcMap[1][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
        result:=[round(funcPosition[0]+0.1) , round(funcPosition[1]+0.1)];
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __playerPosition:=minimap.getPlayer();
  ========================================
}

function tMinimap.getPlayer():tPoint;
  var
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
    funcX1,
      funcX2,
      funcY1,
      funcY2:int32;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=237147 then
              begin
                result:=[(funcX1:=(funcPointer+20)^)+round(((funcX2:=(funcPointer+136)^)-funcX1)/2),(funcY1:=(funcPointer+24)^)+round(((funcY2:=(funcPointer+140)^)-funcY1)/2)];
                break;
              end;
            funcPointer:=funcPointer+36;
          end;
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __radians:=minimap.getRadians();
  if shortestRadians(__radians,3.14159265358979).abs()>0.17453292519943 then
    minimap.setRadians(3.14159265358979);
  ========================================
}

function tMinimap.getRadians():double;
  var
    funcMapX,
      funcMapY:array[0..3] of single;
  begin
    glMapCoords(funcMapX,funcMapY);
    result:=arcTan2(funcMapY[3]-funcMapY[0],funcMapX[3]-funcMapX[0]);
    if result<0 then
      result:=2*3.1415926535897932384626433832795+result;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __runEnergy:=minimap.getRunEnergy();
  if __runEnergy<10 then
    minimap.setRunMode(false);
  ========================================
}

function tMinimap.getRunEnergy():integer;
  var
    funcBounds:tBox;
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=159981 then
              begin
                funcBounds:=[integer((funcPointer+12)^-17),integer((funcPointer+16)^-17),integer((funcPointer+12)^+17),integer((funcPointer+16)^+17)];
                break;
              end;
            funcPointer:=funcPointer+36;
          end;
        if funcPointerIndex=funcPointerSize then
          exit();
        funcPointer:=glFonts(funcPointerSize);
        if funcPointer<>nil then
          begin
            for funcPointerIndex:=0 to funcPointerSize-1 do
              begin
                if pointInBox([(funcPointer+8)^,(funcPointer+12)^],funcBounds) then
                  begin
                    if (funcPointer+16)^=37 then
                      break
                    else if (funcPointer+4)^=16777215 then
                      result:=result*10+((funcPointer+16)^-48);
                  end;
                funcPointer:=funcPointer+48;
              end;
          end;
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __runMode:=minimap.getRunMode();
  if not __runMode then
    minimap.setRunMode(true);
  ========================================
}

function tMinimap.getRunMode():boolean;
  var
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=159981 then
              begin
                result:=(funcPointer+36)^=171817;
                break;
              end
            funcPointer:=funcPointer+36;
          end;
      end;
    exit(result);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  mapCoord:=[50,65];
  screenCoord:=minimap.getScreenPosition(mapCoord);
  mouse.click(screenCoord);
  ========================================
}

function tMinimap.getScreenPosition(funcPoint:tPoint):tPoint;
  var
    funcAngle,
      funcCos,
      funcSin:double;
    funcDestination,
      funcLocalPosition,
      funcPlayer:array[0..1] of double;
    funcMap:array[0..1] of array[0..3] of single;
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=237147 then
              begin
                funcPlayer:=[0+(funcPointer+20)^+(0+(funcPointer+136)^-(funcPointer+20)^)/2,0+(funcPointer+24)^+(0+(funcPointer+140)^-(funcPointer+24)^)/2];
                break;
              end;
            funcPointer:=funcPointer+36;
          end;
        if glMapCoords(funcMap[0],funcMap[1]) and (@funcMap[0][0]<>nil) and (@funcPlayer[0]<>nil) then
          begin
            funcCos:=cos(funcAngle:=arcTan2(funcMap[1][3]-funcMap[1][0],funcMap[0][3]-funcMap[0][0]));
            funcSin:=sin(funcAngle);
            funcLocalPosition[0]:=((funcPlayer[0]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcPlayer[1]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
            funcLocalPosition[1]:=((funcPlayer[1]-funcMap[1][0])*(funcMap[0][3]-funcMap[0][0])-(funcPlayer[0]-funcMap[0][0])*(funcMap[1][3]-funcMap[1][0]))*512.0/((funcMap[0][3]-funcMap[0][0])*(funcMap[1][1]-funcMap[1][0])-(funcMap[1][3]-funcMap[1][0])*(funcMap[0][1]-funcMap[0][0]))/4;
            funcDestination:=[funcPlayer[0]+(funcDestination:=[(funcPoint.x-funcLocalPosition[0])*4,(funcPoint.y-funcLocalPosition[1])*4])[0]*funcCos-funcDestination[1]*funcSin,funcPlayer[1]+funcDestination[0]*funcSin+funcDestination[1]*funcCos];
            result:=[round(funcDestination[0]),round(funcDestination[1])];
          end;
      end;
    exit(result);
  end;

{function minimap.getScreenPosition(funcPoint:tPoint):tPoint;
  var
    funcAngle,
      funcCos,
      funcSin:double;
    funcDestination,
      funcMiddle:array[0..1] of double;
    funcMap:array[0..1] of array[0..3] of single;
  begin
    glMapCoords(funcMap[0],funcMap[1]);
    funcDestination:=[(funcMiddle:=[(funcMap[0][0]+funcMap[0][2])/2,(funcMap[1][0]+funcMap[1][2])/2])[0]+(funcDestination:=[(funcPoint.x-64)*4,(funcPoint.y-64)*4])[0]*(funcCos:=cos((funcAngle:=arcTan2(funcMap[1][3]-funcMap[1][0],funcMap[0][3]-funcMap[0][0]))))-funcDestination[1]*(funcSin:=sin(funcAngle)),funcMiddle[1]+funcDestination[0]*funcSin+funcDestination[1]*funcCos];
    writeLN(funcDestination);
    result:=[round(funcDestination[0]+0.1),round(funcDestination[1]+0.1)];
  end;}

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __degrees:=minimap.getDegrees();
  if shortestDegrees(__degrees,45).abs()>10 then
    minimap.setDegrees(45);
  ========================================
}

function tMinimap.setDegrees(funcDegrees:int32):boolean;
  begin exit(result:=minimap.setRadians(funcDegrees*0.01745329251994329576923690768489));end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __degrees:=minimap.getDegrees();
  if shortestDegrees(__degrees,45).abs()>10 then
    minimap.setDirection('north-west');
  ========================================
}

function tMinimap.setDirection(funcDirection:ansiString):boolean;
  var
    funcAngle:double;
  begin
    case (funcDirection:=replaceRegExpr('(\W|_)*',lowercase(funcDirection),'',false)) of
      'north':funcAngle:=0;
      'northwest':funcAngle:=0.78539816339744830961566084581988;
      'west':funcAngle:=1.5707963267948966192313216916401;
      'southwest':funcAngle:=2.3561944901923449288469825374602;
      'south':funcAngle:=3.1415926535897932384626433832795;
      'southeast':funcAngle:=3.9269908169872415480783042291003;
      'east':funcAngle:=4.7123889803846898576939650749203;
      'northeast':funcAngle:=5.4977871437821381673096259207404;
    end;
    exit(result:=minimap.setRadians(funcAngle));
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __radians:=minimap.getRadians();
  if shortestRadians(__radians,3.14159265358979).abs()>0.17453292519943 then
    minimap.setRadians(3.14159265358979);
  ========================================
}

function tMinimap.setRadians(funcRadians:double):boolean;
  var
    funcDifference:double;
    funcLeft,
      funcRight,
      funcTimedOut:boolean;
    funcTimeOut:countDown;
  begin
    funcTimeOut.setTime(random(2500,5000));
    while (abs(funcDifference:=shortestRadians(minimap.getRadians(),funcRadians))>oglAngleTolerance) and (not (funcTimedOut:=funcTimeOut.isFinished())) do
      begin
        funcLeft:=isKeyDown(37);
        funcRight:=isKeyDown(39);
        if funcDifference<0 then
          begin
            if funcRight then
              keyUp(39);
            if funcLeft then
              continue;
            keyDown(37);
          end
        else
          begin
            if funcLeft then
              keyUp(37);
            if funcRight then
              continue;
            keyDown(39);
          end;
      end;
    if isKeyDown(37) then
      keyUp(37);
    if isKeyDown(39) then
      keyUp(39);
    exit(result:=not funcTimedOut);
  end;

{
  ========================================
  EXAMPLES:
  ----------------------------------------
  __runMode:=minimap.getRunMode();
  if not __runMode then
    minimap.setRunMode(true);
  ========================================
}

function tMinimap.setRunMode(funcEnable:boolean):boolean;
  var
    funcPointer:pointer;
    funcPointerIndex,
      funcPointerSize:uInt32=0;
    funcRunMode:boolean;
    funcX,
      funcY:int32;
  begin
    funcPointer:=glTextures(funcPointerSize);
    if funcPointer<>nil then
      begin
        for funcPointerIndex to funcPointerSize-1 do
          begin
            if funcPointer^=159981 then
              begin
                if ((funcRunMode:=(funcPointer+36)^=171817) and (not funcEnable)) or ((not funcRunMode) and funcEnable) then
                  begin
                    clickMouse(random((funcX:=(funcPointer+12)^)-16,funcX+16),random((funcY:=(funcPointer+16)^)-16,funcY+16),1);
                    result:=true;
                  end;
                break;
              end
            funcPointer:=funcPointer+36;
          end;
      end;
    exit(result);
  end;
{$f+}
